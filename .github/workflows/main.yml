# This is a GitHub Actions workflow file.
# It automatically builds a .exe from your Python script and uploads it
# as an asset to any new "Release" you create on GitHub.

name: Build and Release EXE

# Trigger this workflow on every push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    # Use a Windows runner because we are building a .exe
    runs-on: windows-latest

    steps:
      # 1. Check out your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # You can change this version if needed

      # 3. Install your script's dependencies and PyInstaller
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 4. Run PyInstaller to build the .exe
      #    --onefile: Bundles everything into a single executable
      #    --windowed: Prevents the black console window from opening
      #    --name: Sets the final name of your .exe file
      #    --hidden-import: Ensures specific libraries are bundled
      - name: Build executable
        run: >
          pyinstaller 
          --onefile 
          --windowed 
          --name WebScraper 
          --hidden-import=requests 
          --hidden-import=bs4 
          --hidden-import=tkinter 
          main.py

      # 5. Upload the built .exe (from the 'dist' folder) to the GitHub Release
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        with:
          # This URL is automatically provided by the 'on: release' event
          upload_url: ${{ github.event.release.upload_url }}
          
          # Path to the file you want to upload
          asset_path: ./dist/WebScraper.exe
          
          # Name of the file as it will appear in the release assets
          asset_name: WebScraper.exe
          
          # The file's content type
          asset_content_type: application/vnd.microsoft.portable-executable
      # 5. Create or update a "latest" release with the built .exe
      - name: Create/Update Latest Release
        uses: softprops/action-gh-release@v2
        with:
          # This is the tag for the release.
          tag_name: latest
          # Name of the release.
          name: Latest Build (from main)
          # 'true' means it's a pre-release (good for main branch builds)
          prerelease: true
          # 'true' means it will create the release if it doesn't exist.
          make_latest: true
          # 'true' allows this action to overwrite existing assets.
          allow_updates: true
          # Files to upload.
          files: ./dist/WebScraper.exe
        env:
          # The GitHub token is required to create/update releases.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

